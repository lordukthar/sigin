{"ast":null,"code":"var _jsxFileName = \"/opt/react_projects/react_public_private/public_private/src/components/PrivateRoute/index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { IsLogin as isLogin } from \"../utils\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PrivateRoute = ({\n  component: Component,\n  ...rest\n}) => {\n  _s();\n\n  const user = useSelector(state => state.userReducer);\n  console.log(\"PE \" + JSON.stringify({ ...rest\n  }));\n  return (\n    /*#__PURE__*/\n    // Show the component only when the user is logged in\n    // Otherwise, redirect the user to /signin page\n    _jsxDEV(Route, { ...rest,\n      render: props => isLogin(user.name) ? /*#__PURE__*/_jsxDEV(Component, { ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 30\n      }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/signin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 57\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }, this)\n  );\n};\n\n_s(PrivateRoute, \"ODc3cjw/vvoWaLFqHWcEGODyOfo=\", false, function () {\n  return [useSelector];\n});\n\n_c = PrivateRoute;\nexport default PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["/opt/react_projects/react_public_private/public_private/src/components/PrivateRoute/index.js"],"names":["React","Route","Redirect","IsLogin","isLogin","useSelector","PrivateRoute","component","Component","rest","user","state","userReducer","console","log","JSON","stringify","props","name"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,OAAO,IAAIC,OAApB,QAAmC,UAAnC;AACA,SAASC,WAAT,QAA4B,aAA5B;;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAD,KAAuC;AAAA;;AAExD,QAAMC,IAAI,GAAGL,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACC,WAAlB,CAAxB;AACCC,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAOC,IAAI,CAACC,SAAL,CAAe,EAAE,GAAGP;AAAL,GAAf,CAAnB;AACH;AAAA;AACE;AACA;AACA,YAAC,KAAD,OACMA,IADN;AAEE,MAAA,MAAM,EAAGQ,KAAD,IACNb,OAAO,CAACM,IAAI,CAACQ,IAAN,CAAP,gBAAqB,QAAC,SAAD,OAAeD;AAAf;AAAA;AAAA;AAAA;AAAA,cAArB,gBAAgD,QAAC,QAAD;AAAU,QAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AAHpD;AAAA;AAAA;AAAA;AAAA;AAHF;AAUD,CAdD;;GAAMX,Y;UAEWD,W;;;KAFXC,Y;AAgBN,eAAeA,YAAf","sourcesContent":["import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { IsLogin as isLogin } from \"../utils\";\nimport { useSelector } from \"react-redux\";\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n\n    const user = useSelector((state) => state.userReducer)\n     console.log(\"PE \"+ JSON.stringify({ ...rest }));\n  return (\n    // Show the component only when the user is logged in\n    // Otherwise, redirect the user to /signin page\n    <Route\n      {...rest}\n      render={(props) =>\n        isLogin(user.name) ? <Component {...props} /> : <Redirect to=\"/signin\" />\n      }\n    />\n  );\n};\n\nexport default PrivateRoute;\n"]},"metadata":{},"sourceType":"module"}